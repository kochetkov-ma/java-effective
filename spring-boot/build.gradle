import org.gradle.api.tasks.wrapper.Wrapper

plugins {
    id 'java'
    id 'io.freefair.lombok' version '5.0.1'

    id 'org.springframework.boot' version '2.2.7.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'

    id 'com.github.ben-manes.versions' version '0.28.0'
}

group 'org.example'
version '1.0-SNAPSHOT'

wrapper {
    distributionType = Wrapper.DistributionType.ALL
    gradleVersion = '6.4'
}
java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}
generateLombokConfig {
    enabled false
}
test {
    useJUnitPlatform()
}
repositories {
    mavenCentral()
}
ext {
    junit4Version = '4.13'
    mockitoVersion = '3.3.3'
    assertjVersion = '3.16.1'
    slf4jVersion = '1.7.30'
    commonsLangVersion = '3.9'
    guavaVersion = '29.0-jre'
    logbackVersion = '1.2.3'
    apacheIoVersion = '2.6'
    openApiVersion = '1.3.9'
    h2Version = '1.4.200'
    junit4Version = '4.13'
}
dependencies {
    /* Guava */
    implementation "com.google.guava:guava:$guavaVersion"
    /* Open API */
    implementation "org.springdoc:springdoc-openapi-ui:$openApiVersion"
    /* Spring Boot */
    implementation('org.springframework.boot:spring-boot-starter-web') { exclude group: 'ch.qos.logback' }

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly "com.h2database:h2:$h2Version"

    /* Apache commons */
    implementation "commons-io:commons-io:$apacheIoVersion"
    /* Logging API*/
    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    /* Logging IMPL*/
    runtimeOnly "ch.qos.logback:logback-classic:$logbackVersion"

    /* Testing */
    testImplementation("junit:junit:$junit4Version") { transitive = false }
    // testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.assertj:assertj-core:$assertjVersion"
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage'
        exclude group: 'ch.qos.logback'
    }

    // testImplementation("junit:junit:$junit4Version") { transitive = false }
}